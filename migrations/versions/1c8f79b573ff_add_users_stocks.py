"""add users stocks

Revision ID: 1c8f79b573ff
Revises: 
Create Date: 2023-12-18 09:30:18.743995

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "1c8f79b573ff"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

create_func = """CREATE  FUNCTION update_update_time()
RETURNS TRIGGER AS $$
BEGIN
    NEW.update_time = now();
    RETURN NEW;
END;
$$ language 'plpgsql';"""
create_trigger = """CREATE TRIGGER update_users_update_time
    BEFORE UPDATE
    ON
        users
    FOR EACH ROW
EXECUTE PROCEDURE update_update_time();"""

drop_trigger = """drop trigger update_users_updated_time on users"""
def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "stocks",
        sa.Column("sysmbol", sa.String(), nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("price", sa.FLOAT(), nullable=True),
        sa.Column("change", sa.FLOAT(), nullable=True),
        sa.PrimaryKeyConstraint("sysmbol"),
    )
    op.create_table(
        "users",
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("code", sa.INTEGER(), nullable=True),
        sa.Column(
            "create_time",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "update_time",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("email"),
    )
    op.execute(create_func)
    op.execute(create_trigger)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute(drop_trigger)
    op.drop_table("users")
    op.drop_table("stocks")
    # ### end Alembic commands ###

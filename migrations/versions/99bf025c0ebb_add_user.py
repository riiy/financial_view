"""add user

Revision ID: 99bf025c0ebb
Revises: e45b77fcdcf8
Create Date: 2023-12-20 15:56:33.670872

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "99bf025c0ebb"
down_revision: Union[str, None] = "e45b77fcdcf8"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

create_trigger = "CREATE TRIGGER update_users_update_time BEFORE UPDATE ON auth.user FOR EACH ROW EXECUTE PROCEDURE update_update_time();"
drop_trigger = "drop trigger update_users_updated_time on auth.user"

def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "user",
        sa.Column("email", sa.String(), nullable=False),
        sa.Column(
            "create_time",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "update_time",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("email"),
        schema="auth",
    )
    op.create_index(
        op.f("ix_auth_user_create_time"),
        "user",
        ["create_time"],
        unique=False,
        schema="auth",
    )
    op.create_index(
        op.f("ix_auth_user_update_time"),
        "user",
        ["update_time"],
        unique=False,
        schema="auth",
    )
    op.execute(create_trigger)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_auth_user_update_time"), table_name="user", schema="auth")
    op.drop_index(op.f("ix_auth_user_create_time"), table_name="user", schema="auth")
    op.execute(drop_trigger)
    op.drop_table("user", schema="auth")
    # ### end Alembic commands ###
